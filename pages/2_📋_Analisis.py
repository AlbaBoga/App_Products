#--------------LIBRER√çAS--------------#
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import plotly.graph_objects as go
import plotly.express as px
from scipy.stats import shapiro
from scipy.stats import mannwhitneyu
import random
import streamlit as st
from PIL import Image
#--------------LIBRER√çAS--------------#

#----------------------------CONFIGURACI√ìN DE P√ÅGINAS----------------------------#
st.set_page_config(page_title='An√°lisis de Productos', page_icon='üñ•Ô∏è', layout='wide')
st.set_option('deprecation.showPyplotGlobalUse', False)
#----------------------------CONFIGURACI√ìN DE P√ÅGINAS----------------------------#

digital = pd.read_csv(r"data/digital_limpio.csv")

# -- img
col1,col2,col3 = st.columns(3)
with col2:
    image2 = Image.open(r'img/Analisis.png')
    st.image(image2)
# -- img

st.sidebar.title('MEN√ö üõí')
option = st.sidebar.radio('',('Precios medios', 'Disponibilidad', 'Estado', 'Rebajas', 'Env√≠os','Tiendas'))

if option=='Precios medios':
    # -- distribuci√≥n precios
    st.title('Distribuci√≥n de precios medios por visitas')
    digital['nuevas_fechas']=pd.to_datetime(digital['nuevas_fechas'],format='mixed')
    digital['a√±o']=digital['nuevas_fechas'].dt.year

    option1 = st.sidebar.radio('Selecciona:', ('Distribuci√≥n Anual','Distribuci√≥n'))
    if option1 == 'Distribuci√≥n':
        st.subheader('Evaluaci√≥n de los datos')
        fig=px.histogram(x=digital['Precio medio'], color_discrete_sequence=['#715AFF'])
        fig.update_layout(height=600, width=600, title_text="Distribuci√≥n de precios medios para todos los a√±os", 
                        xaxis=dict(title="Precio medio"), yaxis=dict(title="N√∫mero de art√≠culos visitados"))
        col1,col2,col3=st.columns(3)
        with col2:
            st.plotly_chart(fig)
        st.subheader('An√°lisis de hip√≥tesis')
        st.markdown("""
En la distribuci√≥n de precios medios se observa que hay un mayor n√∫mero de visitas para los rangos de precios que van hasta los 200 d√≥lares y que el precio medio m√°ximo del art√≠culos visitados es de 6500 d√≥lares. El n√∫mero de visitas decrece considerablemente conforme el precio de los art√≠culos aumenta, por tanto, la hip√≥tesis que se presenta es que la distribuci√≥n de precios medios no estar√≠a normalmente distribuida debido a la variaci√≥n en el n√∫mero de visitas en funci√≥n de los diferentes rangos de precios.

Para la confirmaci√≥n de dicha hip√≥teisis, se procede a utilizar el ``test de Shapiro-Wilk``.
* ``Hip√≥tesis nula``: La distribuci√≥n de visitas en funci√≥n de los precios medios sigue una distribuci√≥n Gaussiana, es decir, el mayor n√∫mero de visitas se centra en un rango medio de precios.
* ``Hip√≥tesis alternativa``: El rango de precios medios de art√≠culos visitados no sigue una distribuci√≥n Gaussiana, indicando que los diferentes clientes pueden tener ciertas preferencias dependiendo de los rangos de precios presentados.
                    """)
        shapiro_test = shapiro(digital['Precio medio'])
        if shapiro_test[1]<0.05:
            st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test[1]}")
            st.write('Se rechaza la hip√≥tesis nula.')
        else:
            st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test[1]}")
            st.write('No se puede rechazar la hip√≥teisis nula.')

    elif option1 == 'Distribuci√≥n Anual':
        col1,col2,col3=st.columns(3)
        with col2:
            year = st.slider('Selecciona el a√±o:', min_value=2014, max_value=2018)
        
        precios_a√±o = digital[digital['a√±o']==year]['Precio medio']
        
        fig=px.histogram(x=precios_a√±o, color_discrete_sequence=['#715AFF'])
        fig.update_layout(height=600, width=600, title_text="Distribuci√≥n de precios medios por a√±os", 
                        xaxis=dict(title="Precio medio"), yaxis=dict(title="N√∫mero de art√≠culos visitados"))
        col1,col2,col3=st.columns(3)
        with col2:
            st.plotly_chart(fig)

    # -- distribuci√≥n precios


elif option=='Disponibilidad':
    # -- distribuci√≥n disponibilidad
    st.title('Distribuci√≥n de precios medios por disponibilidad y categor√≠as')

    st.subheader('Evaluaci√≥n de los datos')
    distribution1=digital.groupby(['Categoria Principal','Disponibilidad'])['Precio medio'].value_counts().sort_values(ascending=False).reset_index()
    fig = px.strip(distribution1, x='Categoria Principal', y="Precio medio", color='Disponibilidad',
                color_discrete_sequence=['#172D67','#715AFF','#22DDD2','#2E73EA','#8C15E9','#17072B'])

    fig.update_layout(
        title='Distribuci√≥n de categor√≠as por disponibilidad',
        xaxis=dict(title='Categor√≠as'),
        yaxis=dict(title='Precio medio de los art√≠culos'),
        height=650, width=650
    )

    col1,col2,col3=st.columns(3)
    with col2:
        st.plotly_chart(fig)

    st.subheader('An√°lisis de hip√≥tesis')
    st.markdown("""
Se busca determinar si la distribuci√≥n de precios para aquellos art√≠culos disponibles y los que s√≥lo est√°n disponibles por encargo es la misma o no.

Para la confirmaci√≥n de dicha hip√≥teisis, primero se estudia la distribuci√≥n de los dos grupos mediante el ``test de Shapiro-Wilk``, lo que nos permitir√° saber si siguen una distribuci√≥n normal para utilizar un test param√©trico, o no, en cuyo caso se har√≠a uso de tests no param√©tricos.
* ``Hip√≥tesis nula``: Siguen una distribuci√≥n Gaussiana.
* ``Hip√≥tesis alternativa``: No siguen una distribuci√≥n Gaussiana.
                    """)
    st.markdown("""##### Grupo A: Art√≠culos disponibles""")

    # Se obtienen las dos muestras.
    group_A = digital.loc[digital['Disponibilidad'].isin(['In Stock']),'Precio medio']
    group_B = digital.loc[digital['Disponibilidad'].isin(['Special Order']),'Precio medio']

    shapiro_test_A = shapiro(group_A)
    if shapiro_test_A[1]<0.05:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_A[1]}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_A[1]}")
        st.write('No se puede rechazar la hip√≥teisis nula.')

    st.markdown("""##### Grupo B: Art√≠culos por encargo""")

    shapiro_test_B = shapiro(group_B)
    if shapiro_test_B[1]<0.05:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_B[1]}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_B[1]}")
        st.write('No se puede rechazar la hip√≥teisis nula.')

    st.markdown("""##### A/B testing""")
    st.markdown("""
Dado que se ha rechazado la hip√≥teisis nula en el test de Shapiro-Wilk para los dos casos, se va a proceder a estudiar la hip√≥tesis establecida para ambos grupos mediante el ``test U de Mann-Whitney``, que es el test no param√©trico m√°s com√∫n.
* ``Hip√≥tesis nula``: Ambos grupos siguen la misma distribuci√≥n, por lo que las categor√≠as no son determinantes en el precio medio de art√≠culos visitados.
* ``Hip√≥tesis alternativa``: Ambos grupos no siguen la misma distribuci√≥n, por lo que hay una diferencia significativa entre los rangos de precios visitados por los clientes para cada categor√≠a.
""")
    MW_test = mannwhitneyu(group_A, group_B)
    if MW_test.pvalue<0.05:
        st.write(f"El p-valor obtenido en el test de Mann-Whitney es de {MW_test.pvalue}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Mann-Whitney es de {MW_test.pvalue}")
        st.write('No se puede rechazar la hip√≥teisis nula.')
    
    st.write(f'üåê La mediana del precio de los art√≠culos disponibles: {group_A.median()} USD')
    st.write(f'üåê La mediana del precio de los art√≠culos disponibles por encargo: {group_B.median()} USD')

    # -- distribuci√≥n disponibilidad


elif option=='Estado':
    # -- distribucion estado
    st.title('Distribuci√≥n de precios medios por estado y categor√≠as')

    st.subheader('Evaluaci√≥n de los datos')
    distribution2=digital.groupby(['Categoria Principal','Estado'])['Precio medio'].value_counts().sort_values(ascending=False).reset_index()
    fig = px.strip(distribution2, x='Categoria Principal', y="Precio medio", color='Estado',
                color_discrete_sequence=['#172D67','#715AFF','#22DDD2','#2E73EA','#8C15E9','#17072B'])

    fig.update_layout(
        title='Distribuci√≥n de categor√≠as por estado',
        xaxis=dict(title='Categor√≠as'),
        yaxis=dict(title='Precio medio de los art√≠culos'),
        height=650, width=650
    )

    col1,col2,col3=st.columns(3)
    with col2:
        st.plotly_chart(fig)

    st.subheader('An√°lisis de hip√≥tesis')
    st.markdown("""
Se quiere averiguar si los clientes buscan los mismos rangos de precios en art√≠culos nuevos y usados o no.

Para la confirmaci√≥n de dicha hip√≥teisis, primero se estudia la distribuci√≥n de los dos grupos mediante el ``test de Shapiro-Wilk``, lo que nos permitir√° saber si siguen una distribuci√≥n normal para utilizar un test param√©trico, o no, en cuyo caso se har√≠a uso de tests no param√©tricos.
* ``Hip√≥tesis nula``: Siguen una distribuci√≥n Gaussiana.
* ``Hip√≥tesis alternativa``: No siguen una distribuci√≥n Gaussiana.
                    """)
    st.markdown("""##### Grupo A: Art√≠culos nuevos""")

    # Se obtienen las dos muestras.
    group_A = digital.loc[digital['Estado'].isin(['New']),'Precio medio']
    group_B = digital.loc[digital['Estado'].isin(['Used']),'Precio medio']

    shapiro_test_A = shapiro(group_A)
    if shapiro_test_A[1]<0.05:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_A[1]}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_A[1]}")
        st.write('No se puede rechazar la hip√≥teisis nula.')

    st.markdown("""##### Grupo B: Art√≠culos usados""")

    shapiro_test_B = shapiro(group_B)
    if shapiro_test_B[1]<0.05:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_B[1]}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_B[1]}")
        st.write('No se puede rechazar la hip√≥teisis nula.')

    st.markdown("""##### A/B testing""")
    st.markdown("""
Dado que se ha rechazado la hip√≥teisis nula en el test de Shapiro-Wilk, se va a proceder a estudiar la hip√≥tesis establecida para ambos grupos mediante el ``test U de Mann-Whitney``, que es el test no param√©trico m√°s com√∫n.
* ``Hip√≥tesis nula``: Ambos grupos siguen la misma distribuci√≥n, por lo que las categor√≠as no son determinantes en el precio medio de art√≠culos visitados.
* ``Hip√≥tesis alternativa``: Ambos grupos no siguen la misma distribuci√≥n, por lo que hay una diferencia significativa entre los rangos de precios visitados por los clientes para cada categor√≠a.
""")
    MW_test = mannwhitneyu(group_A, group_B)
    if MW_test.pvalue<0.05:
        st.write(f"El p-valor obtenido en el test de Mann-Whitney es de {MW_test.pvalue}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Mann-Whitney es de {MW_test.pvalue}")
        st.write('No se puede rechazar la hip√≥teisis nula.')

    st.write(f'üåê La mediana del precio de los art√≠culos nuevos: {group_A.median()} USD')
    st.write(f'üåê La mediana del precio de los art√≠culos usados: {group_B.median()} USD')
    # -- distribucion estado


elif option=='Rebajas':
    # -- distribuci√≥n rebajas
    st.title('Distribuci√≥n de precios medios por art√≠culos en rebajas y categor√≠as')

    st.subheader('Evaluaci√≥n de los datos')
    distribution3=digital.groupby(['Categoria Principal','prices.isSale'])['Precio medio'].value_counts().sort_values(ascending=False).reset_index()
    distribution3['prices.isSale']=distribution3['prices.isSale'].map({0:'No est√° en rebajas', 1:'Est√° en rebajas'})
    fig = px.strip(distribution3, x='Categoria Principal', y="Precio medio", color='prices.isSale', labels={'prices.isSale':'Rebajas'},
                color_discrete_sequence=['#172D67','#715AFF','#22DDD2','#2E73EA','#8C15E9','#17072B'])

    fig.update_layout(
        title='Distribuci√≥n de categor√≠as por art√≠culos en rebajas',
        xaxis=dict(title='Categor√≠as'),
        yaxis=dict(title='Precio medio de los art√≠culos'),
        height=650, width=650
    )

    col1,col2,col3=st.columns(3)
    with col2:
        st.plotly_chart(fig)

    st.subheader('An√°lisis de hip√≥tesis')
    st.markdown("""
Se pretende saber si los clientes buscan el mismo rango de precios para art√≠culos rebajados y art√≠culos sin descuento.

Para la confirmaci√≥n de dicha hip√≥teisis, primero se estudia la distribuci√≥n de los dos grupos mediante el ``test de Shapiro-Wilk``, lo que nos permitir√° saber si siguen una distribuci√≥n normal para utilizar un test param√©trico, o no, en cuyo caso se har√≠a uso de tests no param√©tricos.
* ``Hip√≥tesis nula``: Siguen una distribuci√≥n Gaussiana.
* ``Hip√≥tesis alternativa``: No siguen una distribuci√≥n Gaussiana.
                    """)
    st.markdown("""##### Grupo A: Art√≠culos no rebajados""")

    # Se obtienen las dos muestras.
    group_A = digital.loc[digital['prices.isSale'].isin([0]),'Precio medio']
    group_B = digital.loc[digital['prices.isSale'].isin([1]),'Precio medio']

    shapiro_test_A = shapiro(group_A)
    if shapiro_test_A[1]<0.05:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_A[1]}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_A[1]}")
        st.write('No se puede rechazar la hip√≥teisis nula.')

    st.markdown("""##### Grupo B: Art√≠culos rebajados""")

    shapiro_test_B = shapiro(group_B)
    if shapiro_test_B[1]<0.05:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_B[1]}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_B[1]}")
        st.write('No se puede rechazar la hip√≥teisis nula.')

    st.markdown("""##### A/B testing""")
    st.markdown("""
Dado que se ha rechazado la hip√≥teisis nula en el test de Shapiro-Wilk, se va a proceder a estudiar la hip√≥tesis establecida para ambos grupos mediante el ``test U de Mann-Whitney``, que es el test no param√©trico m√°s com√∫n.
* ``Hip√≥tesis nula``: Ambos grupos siguen la misma distribuci√≥n, por lo que las categor√≠as no son determinantes en el precio medio de art√≠culos visitados.
* ``Hip√≥tesis alternativa``: Ambos grupos no siguen la misma distribuci√≥n, por lo que hay una diferencia significativa entre los rangos de precios visitados por los clientes para cada categor√≠a.
""")
    MW_test = mannwhitneyu(group_A, group_B)
    if MW_test.pvalue<0.05:
        st.write(f"El p-valor obtenido en el test de Mann-Whitney es de {MW_test.pvalue}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Mann-Whitney es de {MW_test.pvalue}")
        st.write('No se puede rechazar la hip√≥teisis nula.')
    
    st.write(f'üåê La mediana del precio de los art√≠culos sin descuento: {group_A.median()} USD')
    st.write(f'üåê La mediana del precio de los art√≠culos rebajados: {group_B.median()} USD')
    # -- distribuci√≥n rebajas


elif option=='Env√≠os':
    # -- distribuci√≥n env√≠os
    st.title('Distribuci√≥n de precios medios por env√≠o y categor√≠as')

    st.subheader('Evaluaci√≥n de los datos')
    distribution4=digital.groupby(['Categoria Principal','Envios'])['Precio medio'].value_counts().sort_values(ascending=False).reset_index()
    fig = px.strip(distribution4, x='Categoria Principal', y="Precio medio", color='Envios',
                color_discrete_sequence=['#172D67','#715AFF','#22DDD2','#2E73EA','#8C15E9','#17072B'])

    fig.update_layout(
        title='Distribuci√≥n de categor√≠as por tipo de env√≠os',
        xaxis=dict(title='Categor√≠as'),
        yaxis=dict(title='N√∫mero de art√≠culos'),
        height=650, width=650
    )

    col1,col2,col3=st.columns(3)
    with col2:
        st.plotly_chart(fig)

    st.subheader('An√°lisis de hip√≥tesis')
    st.markdown("""
Se quiere averiguar si los clientes buscan el mismo rango de precio para envios est√°ndar gratuitos y env√≠os con un m√≠nimo de compra.

Para la confirmaci√≥n de dicha hip√≥teisis, primero se estudia la distribuci√≥n de los dos grupos mediante el ``test de Shapiro-Wilk``, lo que nos permitir√° saber si siguen una distribuci√≥n normal para utilizar un test param√©trico, o no, en cuyo caso se har√≠a uso de tests no param√©tricos.
* ``Hip√≥tesis nula``: Siguen una distribuci√≥n Gaussiana.
* ``Hip√≥tesis alternativa``: No siguen una distribuci√≥n Gaussiana.
                    """)
    st.markdown("""##### Grupo A: Env√≠o gratis est√°ndar""")

    # Se obtienen las dos muestras.
    group_A = digital.loc[digital['Envios'].isin(['Free Standard Shipping']),'Precio medio']
    group_B = digital.loc[digital['Envios'].isin(['Minimum Order Free Shipping']),'Precio medio']

    shapiro_test_A = shapiro(group_A)
    if shapiro_test_A[1]<0.05:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_A[1]}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_A[1]}")
        st.write('No se puede rechazar la hip√≥teisis nula.')

    st.markdown("""##### Grupo B: Env√≠o con pedido m√≠nimo""")

    shapiro_test_B = shapiro(group_B)
    if shapiro_test_B[1]<0.05:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_B[1]}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_B[1]}")
        st.write('No se puede rechazar la hip√≥teisis nula.')

    st.markdown("""##### A/B testing""")
    st.markdown("""
Dado que se ha rechazado la hip√≥teisis nula en el test de Shapiro-Wilk, se va a proceder a estudiar la hip√≥tesis establecida para ambos grupos mediante el ``test U de Mann-Whitney``, que es el test no param√©trico m√°s com√∫n.
* ``Hip√≥tesis nula``: Ambos grupos siguen la misma distribuci√≥n, por lo que las categor√≠as no son determinantes en el precio medio de art√≠culos visitados.
* ``Hip√≥tesis alternativa``: Ambos grupos no siguen la misma distribuci√≥n, por lo que hay una diferencia significativa entre los rangos de precios visitados por los clientes para cada categor√≠a.
""")
    MW_test = mannwhitneyu(group_A, group_B)
    if MW_test.pvalue<0.05:
        st.write(f"El p-valor obtenido en el test de Mann-Whitney es de {MW_test.pvalue}")
        st.write('Se rechaza la hip√≥tesis nula.')
    else:
        st.write(f"El p-valor obtenido en el test de Mann-Whitney es de {MW_test.pvalue}")
        st.write('No se puede rechazar la hip√≥teisis nula.')

    st.write(f'üåê La mediana del precio de los art√≠culos con env√≠o gratis est√°ndar: {group_A.median()} USD')
    st.write(f'üåê La mediana del precio de los art√≠culos con env√≠o gratis a partir de un m√≠nimo de compra: {group_B.median()} USD')
    # -- distribuci√≥n env√≠os

elif option=='Tiendas':
    # -- tiendas
    st.title('Distribuci√≥n de precios medios por visitas a tiendas')

    st.subheader('Evaluaci√≥n de los datos')
    tab1,tab2,tab3,tab4,tab5 = st.tabs(['Distribuci√≥n','Bestbuy','Walmart','Bhphotovideo','Ebay'])
    with tab1:
        tiendas=digital.groupby(['Tienda Precio', 'nuevas_fechas'])['Precio medio'].mean().reset_index()
        fig = px.violin(tiendas,
    x='Tienda Precio',
    y='Precio medio',
    color='Tienda Precio',
    box=True,
    points='all',
    color_discrete_sequence=['#172D67','#715AFF','#22DDD2','#2E73EA','#8C15E9','#17072B'],
    height=550, width=650)
        fig.update_layout(xaxis=dict(tickfont=dict(size=17, color="darkblue", family="Arial")))
        
        col1,col2,col3=st.columns(3)
        with col2:
            st.plotly_chart(fig)
        
        st.subheader('An√°lisis de hip√≥tesis')
        st.markdown("""
Se quiere averiguar si los clientes buscan el mismo rango de precios en las tiendas m√°s visitadas, que ser√≠an Walmart y Bestbuy.    

Para la confirmaci√≥n de dicha hip√≥teisis, primero se estudia la distribuci√≥n de los dos grupos mediante el ``test de Shapiro-Wilk``, lo que nos permitir√° saber si siguen una distribuci√≥n normal para utilizar un test param√©trico, o no, en cuyo caso se har√≠a uso de tests no param√©tricos.
* ``Hip√≥tesis nula``: Siguen una distribuci√≥n Gaussiana.
* ``Hip√≥tesis alternativa``: No siguen una distribuci√≥n Gaussiana.
                        """)
        st.markdown("""##### Grupo A: Walmart""")

        # Se obtienen las dos muestras.
        group_A = digital.loc[digital['Tienda Precio'].isin(['walmart']),'Precio medio']
        group_B = digital.loc[digital['Tienda Precio'].isin(['bestbuy']),'Precio medio']

        shapiro_test_A = shapiro(group_A)
        if shapiro_test_A[1]<0.05:
            st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_A[1]}")
            st.write('Se rechaza la hip√≥tesis nula.')
        else:
            st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_A[1]}")
            st.write('No se puede rechazar la hip√≥teisis nula.')

        st.markdown("""##### Grupo B: Bestbuy""")

        shapiro_test_B = shapiro(group_B)
        if shapiro_test_B[1]<0.05:
            st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_B[1]}")
            st.write('Se rechaza la hip√≥tesis nula.')
        else:
            st.write(f"El p-valor obtenido en el test de Shapiro-Wilk es de {shapiro_test_B[1]}")
            st.write('No se puede rechazar la hip√≥teisis nula.')

        st.markdown("""##### A/B testing""")
        st.markdown("""
    Dado que se ha rechazado la hip√≥teisis nula en el test de Shapiro-Wilk, se va a proceder a estudiar la hip√≥tesis establecida para ambos grupos mediante el ``test U de Mann-Whitney``, que es el test no param√©trico m√°s com√∫n.
    * ``Hip√≥tesis nula``: Ambos grupos siguen la misma distribuci√≥n, por lo que las categor√≠as no son determinantes en el precio medio de art√≠culos visitados.
    * ``Hip√≥tesis alternativa``: Ambos grupos no siguen la misma distribuci√≥n, por lo que hay una diferencia significativa entre los rangos de precios visitados por los clientes para cada categor√≠a.
    """)
        MW_test = mannwhitneyu(group_A, group_B)
        if MW_test.pvalue<0.05:
            st.write(f"El p-valor obtenido en el test de Mann-Whitney es de {MW_test.pvalue}")
            st.write('Se rechaza la hip√≥tesis nula.')
        else:
            st.write(f"El p-valor obtenido en el test de Mann-Whitney es de {MW_test.pvalue}")
            st.write('No se puede rechazar la hip√≥teisis nula.')
        
        st.write(f'üåê La mediana del precio de los art√≠culos vistos en Walmart: {group_A.median()} USD')
        st.write(f'üåê La mediana del precio de los art√≠culos vistos en Bestbuy: {group_B.median()} USD')
    
    with tab2:
        bestbuy=digital[digital['Tienda Precio']=='bestbuy'].groupby('nuevas_fechas')['Precio medio'].mean().reset_index()
        fig=px.area(bestbuy, y="Precio medio",title = "Precio medio de los art√≠culos visitados en Bestbuy",
            color_discrete_sequence=['#715AFF'],
            height=550, width=750)
        fig.update_layout(
                yaxis_title="Precio medio",
                xaxis_title="Datos"
        )
        col1,col2,col3=st.columns(3)
        with col2:
            st.plotly_chart(fig)
    
    with tab3:
        walmart=digital[digital['Tienda Precio']=='walmart'].groupby('nuevas_fechas')['Precio medio'].mean().reset_index()
        fig=px.area(walmart, y="Precio medio",title = "Precio medio de los art√≠culos visitados en Walmart",
            color_discrete_sequence=['#715AFF'],
            height=550, width=750)
        fig.update_layout(
            yaxis_title="Precio medio",
            xaxis_title="Datos"
        )
        col1,col2,col3=st.columns(3)
        with col2:
            st.plotly_chart(fig)

    with tab4:
        bhphotovideo=digital[digital['Tienda Precio']=='bhphotovideo'].groupby('nuevas_fechas')['Precio medio'].mean().reset_index()
        fig=px.area(bhphotovideo, y="Precio medio",title = "Precio medio de los art√≠culos visitados en Bhphotovideo",
            color_discrete_sequence=['#715AFF'],
            height=550, width=750)
        fig.update_layout(
            yaxis_title="Precio medio",
            xaxis_title="Datos"
        )
        col1,col2,col3=st.columns(3)
        with col2:
            st.plotly_chart(fig)
    
    with tab5:
        ebay=digital[digital['Tienda Precio']=='ebay'].groupby('nuevas_fechas')['Precio medio'].mean().reset_index()
        fig=px.area(ebay, y="Precio medio",title = "Precio medio de los art√≠culos visitados en Ebay",
            color_discrete_sequence=['#715AFF'],
            height=550, width=750)
        fig.update_layout(
            yaxis_title="Precio medio",
            xaxis_title="Datos"
        )
        col1,col2,col3=st.columns(3)
        with col2:
            st.plotly_chart(fig)

    # -- tiendas



#--------------------------------------SIDEBAR-------------------------------------#
st.sidebar.markdown("""---""")
image1 = Image.open(r'img/logo.png')
st.sidebar.image(image1)
#--------------------------------------SIDEBAR-------------------------------------#